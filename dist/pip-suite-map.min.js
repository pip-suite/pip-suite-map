!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;((e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).pip||(e.pip={})).maps=t()}}(function(){return function a(s,r,p){function l(e,t){if(!r[e]){if(!s[e]){var n="function"==typeof require&&require;if(!t&&n)return n(e,!0);if(c)return c(e,!0);var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}var i=r[e]={exports:{}};s[e][0].call(i.exports,function(t){return l(s[e][1][t]||t)},i,i.exports,a,s,r,p)}return r[e].exports}for(var c="function"==typeof require&&require,t=0;t<p.length;t++)l(p[t]);return l}({1:[function(t,e,n){!function(){"use strict";angular.module("pipMaps").provider("pipGoogleMaps",function(){var r={mapTypeId:google.maps.MapTypeId.SATELLITE,disableDefaultUI:!0,panControl:!1,zoomControl:!1};this.mapOptions=function(t){return r=_.defaults({},t,r),_.cloneDeep(r)},this.$get=["$rootScope",function(t){return{mapOptions:function(){return _.cloneDeep(r)},map:function(s,t,e){s=s||{};var n=_.once(function(t){google.maps.event.trigger(t,"resize")}),o=t&&t.boundary||{};return{center:{latitude:(o.nw_lat+o.se_lat)/2||0,longitude:(o.nw_lon+o.se_lon)/2||0},zoom:16,control:{},options:_.assign({},s,r),bounds:{},events:{click:e||function(){},tilesloaded:n,zoom_changed:function(t){var e=s.maxZoomLevel,n=s.minZoomLevel,o=null==e?r.maxZoom:e,i=null==n?r.minZoom:n,a=t.getZoom();o<a?t.setZoom(o):a<i&&t.setZoom(i)}}}},infoWindow:function(t,e){return{show:!1,control:{},options:{boxClass:"pip-map-info-window "+t,closeBoxURL:"",pixelOffset:e||new google.maps.Size(-175,-210,"px","px")}}},setMapBounds:function(e,n){var o=t.$watch(function(){return e.bounds},function(t){t.northeast&&t.southwest&&(e.bounds={northeast:{latitude:n.boundary.nw_lat,longitude:n.boundary.se_lon},southwest:{latitude:n.boundary.se_lat,longitude:n.boundary.nw_lon}},o())},!0)},fitMapToBounds:function(t,e){if(!e.isEmpty()){var n=t.getBounds();!_.isEmpty(n)&&(_.isEmpty(n)||!n.contains||n.contains(e.getNorthEast())&&n.contains(e.getSouthWest()))||t.fitBounds(e)}}}}]})}()},{}],2:[function(t,e,n){!function(){"use strict";function t(t){var o=t.prototype.setChildScope;return t.prototype.setChildScope=function(t,e){var n=o.apply(this,arguments);return e&&e.hasOwnProperty("model")&&!e.model&&delete e.model,n},t}t.$inject=["$delegate"],angular.module("pipMaps").provider("pipMapHelperSrv",function(){var a={iconBaseSize:96,iconNormalScaleFactor:.5,iconActiveScaleFactor:1,iconsPerSprite:1},s=[{name:"North",numberInSprite:0,scope:[-22.5,22.5]},{name:"Northeast",numberInSprite:1,scope:[22.5,67.5]},{name:"East",numberInSprite:2,scope:[67.5,112.5]},{name:"Southeast",numberInSprite:3,scope:[112.5,157.5]},{name:"South",numberInSprite:4,scope:[157.5,-157.5]},{name:"SouthWest",numberInSprite:5,scope:[-157.5,-112.5]},{name:"West",numberInSprite:6,scope:[-112.5,-67.5]},{name:"Northwest",numberInSprite:7,scope:[-67.5,-22.5]},{name:"Stop",numberInSprite:8,scope:[]}];this.setIconSettings=function(t){angular.extend(a,t)},this.$get=["uiGmapGoogleMapApi","$timeout",function(t,o){var i={isReady:!1,whenReady:t,maps:{},getIconDimensions:null,setIcon:null,triggerEvent:null,createSize:null,createPoint:null,createKML:null,getCenterFromRegion:null,fitMapToRegion:null,getBoundsFromRegion:null,getBoundsFromCoordinates:null,fitMapToBounds:null,forceMapToFitBounds:null,shouldFitBound:null,setModelOptions:null,getDegreesBetweenTwoPoints:null,getDirection:null,getDirectionByAngle:null,getIconOriginByDirection:null};return t.then(function(t){var e=t.MapTypeId||{},n={roadMap:e.ROADMAP,satellite:e.SATELLITE,hybrid:e.HYBRID,terrain:e.TERRAIN},o=t.SymbolPath||{},i={circle:o.CIRCLE,backwardClosed:o.BACKWARD_CLOSED_ARROW,forwardClosed:o.FORWARD_CLOSED_ARROW,backwardOpened:o.BACKWARD_OPEN_ARROW,forwardCOpened:o.FORWARD_OPEN_ARROW};this.isReady=!0,angular.extend(this,{mapTypes:n,symbols:i,maps:t})}.bind(i)),i.getIconDimensions=function(t,e){var n=angular.extend({},a,t),o=e?n.iconActiveScaleFactor:n.iconNormalScaleFactor,i=n.iconBaseSize*o;return{origin:this.createPoint(0,i*t.numberInSprite||1),anchor:this.createPoint(i/2,i/2),size:this.createSize(i,i),scaledSize:this.createSize(i,n.iconsPerSprite*i),isActive:e}},i.setIcon=function(e,n){n="boolean"==typeof n?n:e.isActive,i.whenReady.then(function(){var t=this.getIconDimensions(e,n);_.extend(e,t)}.bind(this))},i.triggerEvent=function(){var t=this.maps.event;return t?t.trigger.apply(t,arguments):null},i.createSize=function(t,e){var n=this.maps.Size;return n?new n(t,e,"px","px"):{}},i.createPoint=function(t,e){var n=this.maps.Point;return n?new n(t,e):{}},i.createKML=function(t){var e=this.maps.KmlLayer;return e?new e(t):{}},i.getCenterFromRegion=function(t){return t&&t.boundary?{latitude:(t.boundary.nw_lat+t.boundary.se_lat)/2,longitude:(t.boundary.nw_lon+t.boundary.se_lon)/2}:{latitude:0,longitude:0}},i.fitMapToRegion=function(t,e){var n=this.getBoundsFromRegion(e);o(this.forceMapToFitBounds.bind(this,t,n))},i.getBoundsFromRegion=function(t){return t&&t.boundary?this.getBoundsFromCoordinates([{latitude:t.boundary.se_lat,longitude:t.boundary.se_lon},{latitude:t.boundary.nw_lat,longitude:t.boundary.nw_lon}]):{}},i.getBoundsFromCoordinates=function(t){var e=this.maps.LatLngBounds,n=this.maps.LatLng;if(!n||!e)return{};var o=new e;return t.forEach(function(t){t.latitude&&t.longitude&&o.extend(new n(t.latitude,t.longitude))}),o},i.fitMapToBounds=function(t,e,n){e.isEmpty()||(n||this.shouldFitBound(t,e))&&t.fitBounds(e)},i.forceMapToFitBounds=function(t,e){this.fitMapToBounds(t,e,!0)},i.shouldFitBound=function(t,e){var n=e.getNorthEast(),o=e.getSouthWest(),i=t.getBounds(),a=i.contains&&(!i.contains(n)||!i.contains(o));return _.isEmpty(i)||a},i.setModelOptions=function(t,e){var n=t&&t.gObject;n&&angular.isFunction(n.setOptions)&&n.setOptions(e)},i.getDegreesBetweenTwoPoints=function(t,e){var n={lat:function(){return t.lat||t.latitude},lng:function(){return t.lng||t.longitude}},o={lat:function(){return e.lat||e.latitude},lng:function(){return e.lng||e.longitude}};return google.maps.geometry.spherical.computeHeading(n,o)},i.getDirection=function(t,e){var n=this.getDegreesBetweenTwoPoints(t,e);if((t.lat||t.latitude)===(e.lat||e.latitude)&&(t.lng||t.longitude)===(e.lng||e.longitude))return s[8];for(var o=0;o<8;o++)if(n>=s[o].scope[0]&&n<=s[o].scope[1])return s[o];return s[8]},i.getDirectionByAngle=function(t){for(var e=0;e<8;e++)if(t>=s[e].scope[0]&&t<=s[e].scope[1])return s[e];return s[8]},i.getIconOriginByDirection=function(t,e,n,o){void 0===n&&(n=82),void 0===o&&(o=15);var i=this.getDirection(t,e);return new google.maps.Point(0,i.numberInSprite*n+i.numberInSprite*o)},i}]}).decorator("uiGmapModelKey",t)}()},{}],3:[function(t,e,n){!function(){"use strict";function o(t,e,n,o){this.bounds_=t,this.image_=e,this.map_=n,this.opacity=o||null,this.div_=null,this.setMap(n)}function t(t,e,n){var o=this;t.get("mapEventHandlerMixinFct").mixTo(this,e.$applyAsync.bind(e)),this.sidePanel={},this.embededMap=null,this.pipMapHelperSrv=t.get("pipMapHelperSrv"),this.uiGmapIsReady=t.get("uiGmapIsReady"),this.$timeout=t.get("$timeout"),this.$rootScope=t.get("$rootScope"),this.MapPopupFct=t.get("MapPopupFct"),this.pipMapHelperSrv.whenReady.then(this.init.bind(this)),n.addClass("pip-map flex layout-row"),e.$watch("ctrl.componentOptions.center",function(t){if(1!=o.justResized&&o.gMap&&t){var e={lat:t.latitude||t.lat,lng:t.longitude||t.lng};_.isNumber(e.lat)&&_.isNumber(e.lng)&&o.gMap.panTo(e)}},!0),e.$watch("ctrl.componentOptions.zoom",function(t){o.map&&(o.map.zoom=t)}),e.$watch("ctrl.componentOptions.embededMap",function(t,e){if(t&&e&&t.embededSrc&&e.embededSrc&&t.embededSrc==e.embededSrc&&o.embededOverlay){var n=new google.maps.LatLngBounds(new google.maps.LatLng(t.map_north,t.map_west),new google.maps.LatLng(t.map_south,t.map_east));o.embededOverlay.draw(n)}else o.setEmbededBounds()}),this.$rootScope.$on("pipMainResized",function(){o.throttleResize()})}t.$inject=["$injector","$scope","$element"],(o.prototype=new google.maps.OverlayView).onAdd=function(){var t=document.createElement("div");t.style.borderStyle="none",t.style.borderWidth="0px",t.style.position="absolute",this.opacity&&(t.style.opacity=this.opacity);var e=document.createElement("img");e.src=this.image_,e.style.width="100%",e.style.height="100%",e.style.position="absolute",t.appendChild(e),this.div_=t,this.getPanes().overlayLayer.appendChild(t)},o.prototype.draw=function(t){var e=this.getProjection();if(e){t&&(this.bounds_=t);var n=e.fromLatLngToDivPixel(this.bounds_.getSouthWest()),o=e.fromLatLngToDivPixel(this.bounds_.getNorthEast()),i=this.div_;i&&(i.style.left=n.x+"px",i.style.top=n.y+"px",i.style.width=o.x-n.x+"px",i.style.height=o.y-n.y+"px",this.opacity&&(i.style.opacity=this.opacity))}},t.prototype.defaultOptions={map:{disableDefaultUI:!0,panControl:!(o.prototype.onRemove=function(){this.div_&&this.div_.parentNode&&this.div_.parentNode.removeChild(this.div_),this.div_=null}),zoomControl:!1,disableDoubleClickZoom:!0},setInitBounds:!1,popup:{}},t.prototype.init=function(){this.options=angular.merge({map:{mapTypeId:this.pipMapHelperSrv.mapTypes.satellite}},this.defaultOptions,this.componentOptions),this.componentOptions.control||(this.componentOptions.control={}),this.map=this.getMap(),this.map.zoom=this.componentOptions.zoom,this.map.center=this.componentOptions.center,this.options.sidePanel&&this.options.sidePanel.templateUrl&&this.showSidePanel(this.options.sidePanel.templateUrl),this.uiGmapIsReady.promise().finally(this.onMapReady.bind(this))},t.prototype.onMapReady=function(){this.setInitBounds(),this.setEmbededBounds()},t.prototype.setInitBounds=function(){var t=this.getMapInstance();this.options.setInitBounds&&t&&this.pipMapHelperSrv.fitMapToRegion(t,this.options.geoRegion)},t.prototype.setEmbededBounds=function(){var t=this.getMapInstance();if(this.componentOptions.embededMap&&this.componentOptions.embededMap.embededSrc){var e=new google.maps.LatLngBounds(new google.maps.LatLng(this.componentOptions.embededMap.map_north,this.componentOptions.embededMap.map_west),new google.maps.LatLng(this.componentOptions.embededMap.map_south,this.componentOptions.embededMap.map_east)),n=this.componentOptions.embededMap.embededSrc;this.embededOverlay=new o(e,n,t,this.componentOptions.embededMap.opacity)}else this.embededOverlay&&this.embededOverlay.onRemove(),this.embededOverlay=null},t.prototype.getMapInstance=function(){return!this.gMap&&this.componentOptions&&this.componentOptions.control&&this.componentOptions.control.getGMap&&(this.gMap=this.componentOptions.control.getGMap()),this.gMap},t.prototype.getMap=function(){var e=this,n=this.options.events&&this.options.events.click?this.options.events.click:angular.noop,o=this.options.events&&this.options.events.zoom_changed?this.options.events.zoom_changed:angular.noop,i=this.options.events&&this.options.events.center_changed?this.options.events.center_changed:angular.noop,a=_.debounce(function(t){i(t)},500);return{control:{},options:this.options.map,bounds:this.options.bounds||{},events:_.extend(this.options.events,{click:function(t){e.onClick(t),n()},zoom_changed:function(t){t&&e.componentOptions&&e.componentOptions.mapId&&(t.mapId=e.componentOptions.mapId,o(t))},center_changed:function(t){t&&e.componentOptions&&e.componentOptions.mapId&&(t.mapId=e.componentOptions.mapId,a(t))},dblclick:this.onEventHandler.bind(this),tilesloaded:this.updateMapTiles.bind(this)})}},t.prototype.updateMapTiles=function(t){void 0===t&&(t=!1);var e=this.getMapInstance();e&&this.pipMapHelperSrv.triggerEvent(e,"resize")};var i=_.throttle(function(t,e){e&&(t.panTo(e),t.setCenter(e))},400);t.prototype.throttleResize=function(){var t=this,e=this.getMapInstance();if(e){if(1!=this.justResized){this.justResized=!0;var n=e.getCenter();this.$timeout(function(){i(e,n)}),this.$timeout(function(){t.justResized=!1},400)}this.pipMapHelperSrv.triggerEvent(e,"resize")}},t.prototype.fitMapToBounds=function(t){this.pipMapHelperSrv.fitMapToBounds(this.getMapInstance(),t)},t.prototype.showSidePanel=function(t){this.sidePanel.template=t,this.sidePanel.show=!0,this.$timeout(this.updateMapTiles.bind(this))},t.prototype.hideSidePanel=function(){this.sidePanel.template=null,this.sidePanel.show=!1,this.$timeout(this.updateMapTiles.bind(this))},t.prototype.onClick=function(){this.closePopup()},t.prototype.freeze=function(){this.isFrozen||(this.setMapOptions({draggable:!1,disableDoubleClickZoom:!0,scrollwheel:!1}),this.isFrozen=!0)},t.prototype.unfreeze=function(){this.isFrozen&&(this.setMapOptions({draggable:!0,disableDoubleClickZoom:!0,scrollwheel:!0}),this.isFrozen=!1)},t.prototype.setCursor=function(t){this.cursor=t},t.prototype.setMapOptions=function(t){this.getMapInstance().setOptions(t)},t.prototype.createElementPopup=function(t){return this.createPopupInstance(),this.popup.add(t)},t.prototype.createPopupInstance=function(){this.popup||(this.popup=this.MapPopupFct.create())},t.prototype.closePopup=function(){this.popup&&(console.log("this.popup",this.popup),this.popup.close())},angular.module("pipMaps").controller("MapComponentCtrl",t).directive("pipMap",function(){return{strict:"AE",scope:!0,transclude:!0,bindToController:{componentOptions:"=pipOptions"},controller:"MapComponentCtrl",controllerAs:"ctrl",templateUrl:"map.html"}})}()},{}],4:[function(t,e,n){!function(){"use strict";angular.module("pipMaps").factory("mapEventHandlerMixinFct",function(){function n(a){return a=a||angular.noop,{addEventHandler:function(t,e){var n="__onEventOverridden_"+t;return this[n]=e,function(){this[n]=null}.bind(this)},onEventHandler:function(t,e){var n="__onEventOverridden_"+e,o=function(t,e,n,o){return o&&o.length||(o=n,n=null),{gModel:t,eventName:e,args:o,model:n,position:o[0]&&o[0].latLng&&s(o[0].latLng)}}.apply(null,arguments);if(angular.isFunction(this[n]))return this[n](o),void a();var i="on"+e.charAt(0).toUpperCase()+e.slice(1);angular.isFunction(this[i])&&(this[i](o),a())}}}var s=function(t){return{latitude:t.lat(),longitude:t.lng()}};return{mixTo:function(t,e){angular.extend(t,n(e))}}})}()},{}],5:[function(t,e,n){function o(t){t.configure({key:"AIzaSyBg6cm-FDBFPWzRcn39AuSHGQSrdtVIjEo",v:"3.23",libraries:"geometry"})}o.$inject=["uiGmapGoogleMapApiProvider"],angular.module("pipMaps").config(o)},{}],6:[function(t,e,n){var o={overlay:"<pipOverlay",onEdit:"&?pipOnEdit",mapOptions:"=?pipMapOptions",showActionPanel:"<?pipShowActionPanel",actionTypes:"<?pipActionTypes",control:"&?pipControl",disabled:"<?pipDisabled",disabledPolygons:"<?pipDisabledPolygons",disabledPolygonsOptions:"<?pipDisabledPolygonsOptions",disabledPolylines:"<?pipDisabledPolylines",disabledPolylinesOptions:"<?pipDisabledPolylinesOptions",disabledCircles:"<?pipDisabledCircles",disabledCirclesOptions:"<?pipDisabledCirclesOptions"},i=function(){};i.clearMap="clear",i.addCircle="circle",i.addRectangle="rectangle",i.addPolygon="polygon",i.addLine="line";var a=(s.$inject=["$element","$scope","$mdConstant","$document","$timeout","uiGmapGoogleMapApi"],s.prototype.$onDestroy=function(){},s.prototype.$onChanges=function(t){t.overlay&&t.overlay.currentValue&&this.setOverlay(this.convertToGoogleMapOverlay(t.overlay.currentValue),t.overlay.currentValue.type),t.disabled&&this.currentOverlay&&(this.currentOverlay.setDraggable(!t.disabled.currentValue),this.currentOverlay.setEditable&&this.currentOverlay.setEditable(!t.disabled.currentValue))},s.prototype.$onInit=function(){angular.extend(this.map,this.mapOptions),this.control&&this.control({control:this})},s.prototype.fitBounds=function(){if(this.map.control.getGMap&&this.currentOverlay)switch(this.overlay.type){case"circle":this.map.control.getGMap().fitBounds(this.currentOverlay.getBounds());break;case"marker":this.currentOverlay.getPosition&&this.map.control.getGMap().panTo(this.currentOverlay.getPosition());break;case"rectangle":this.map.control.getGMap().fitBounds(this.currentOverlay.getBounds());break;default:if(0<this.currentOverlay.getPath().getArray().length){var e=new google.maps.LatLngBounds;_.each(this.currentOverlay.getPath().getArray(),function(t){e.extend(t)}),this.map.control.getGMap().fitBounds(e)}}},s.prototype.convertToGoogleMapOverlay=function(t){return"polygon"===t.type?this.createPolygon(t):"line"===t.type||"polyline"===t.type?this.createPolyline(t):"circle"===t.type?this.createCircle(t):"marker"===t.type?this.createMarker(t):"rectangle"===t.type?this.createRectangle(t):void 0},s.prototype.createMarker=function(t){if(t.pos&&t.pos.coordinates||t.latitude&&t.longitude){var e;e={lat:t.pos.coordinates?t.pos.coordinates[1]:t.latitude,lng:t.pos.coordinates?t.pos.coordinates[0]:t.longitude};var n=new google.maps.Marker(angular.extend(this.getOptionsByType("marker"),{position:e}));return this.map.control.getGMap&&n.setMap(this.map.control.getGMap()),n}return new google.maps.Circle(this.getOptionsByType("circle"))},s.prototype.createCircle=function(t){if(t.center&&(t.center.coordinates||t.center.latitude&&t.center.longitude)&&t.distance){var e;e={lat:t.center.coordinates?t.center.coordinates[1]:t.center.latitude,lng:t.center.coordinates?t.center.coordinates[0]:t.center.longitude};var n=new google.maps.Circle(angular.extend(this.getOptionsByType("circle"),{center:e,radius:t.distance}));return this.map.control.getGMap&&n.setMap(this.map.control.getGMap()),n}return new google.maps.Circle(this.getOptionsByType("circle"))},s.prototype.createPolygon=function(t){if(t.geometry&&t.geometry.coordinates){var e=[];_.each(t.geometry.coordinates[0],function(t){e.push({lat:t[1],lng:t[0]})});var n=new google.maps.Polygon(angular.extend(this.getOptionsByType("polygon"),{paths:e}));return this.map.control.getGMap&&n.setMap(this.map.control.getGMap()),n}return new google.maps.Polygon(this.getOptionsByType("polygon"))},s.prototype.createPolyline=function(t){if(t.geometry&&t.geometry.coordinates){var e=[];_.each(t.geometry.coordinates,function(t){e.push({lat:t[1],lng:t[0]})});var n=new google.maps.Polyline(angular.extend(this.getOptionsByType("line"),{path:e}));return this.map.control.getGMap&&n.setMap(this.map.control.getGMap()),n}return new google.maps.Polyline(this.getOptionsByType("line"))},s.prototype.createRectangle=function(t){if(t.bounds){var e=t.bounds,n=new google.maps.Rectangle(angular.extend(this.getOptionsByType("rectangle"),{bounds:e}));return this.map.control.getGMap&&n.setMap(this.map.control.getGMap()),n}return new google.maps.Rectangle(this.getOptionsByType("rectangle"))},s.prototype.getOptionsByType=function(t){switch(t){case"polygon":return _.cloneDeep(angular.extend(this._polygonOptions,this.getDisableOptions()));case"circle":return _.cloneDeep(angular.extend(this._circleOptions,this.getDisableOptions()));case"line":case"polyline":return _.cloneDeep(angular.extend(this._polylineOptions,this.getDisableOptions()));case"marker":return _.cloneDeep(angular.extend(this._markerOptions,this.getDisableOptions()));case"rectangle":return _.cloneDeep(angular.extend(this._rectangleOptions,this.getDisableOptions()))}},s.prototype.getDisableOptions=function(){return{editable:!this.disabled,draggable:!this.disabled}},s.prototype.setOverlay=function(t,e,n){var o=this;if(void 0===n&&(n=!0),t){switch(this.clearMap(),this.currentOverlay=t||{},this.currentOverlay.type=e){case"circle":this.currentOverlay.center_changed=function(){o.onEditOverlay()},this.currentOverlay.radius_changed=function(){o.onEditOverlay()};break;case"marker":if(!this.currentOverlay.addListener)return;this.currentOverlay.addListener("position_changed",function(){o.onEditOverlay()});break;case"rectangle":if(!this.currentOverlay.addListener)return;this.currentOverlay.addListener("bounds_changed",function(){o.onEditOverlay()});break;default:if(!this.currentOverlay.getPath)return;google.maps.event.addListener(this.currentOverlay.getPath(),"set_at",function(){o.onEditOverlay()}),google.maps.event.addListener(this.currentOverlay.getPath(),"insert_at",function(){o.onEditOverlay()})}n&&this.fitBounds()}},s.prototype.onEditOverlay=function(){this.onEdit&&this.onEdit({overlay:this.currentOverlay,bounds:this.currentOverlay&&"rectangle"===this.currentOverlay.type?{north:this.currentOverlay.getBounds().getNorthEast().lat(),east:this.currentOverlay.getBounds().getNorthEast().lng(),south:this.currentOverlay.getBounds().getSouthWest().lat(),west:this.currentOverlay.getBounds().getSouthWest().lng()}:{},type:this.currentOverlay?this.currentOverlay.type:null,path:!this.currentOverlay||"polygon"!==this.currentOverlay.type&&"polyline"!==this.currentOverlay.type?[]:this.currentOverlay.getPath(),center:this.currentOverlay&&"circle"===this.currentOverlay.type?this.currentOverlay.getCenter():this.currentOverlay&&this.currentOverlay.getPosition&&"marker"===this.currentOverlay.type?this.currentOverlay.getPosition():{},radius:this.currentOverlay&&"circle"===this.currentOverlay.type?this.currentOverlay.getRadius():{}})},s.prototype.showAction=function(t){return!this.actionTypes||this.actionTypes.includes(t)},Object.defineProperty(s.prototype,"showPanel",{get:function(){return!1!==this.showActionPanel},enumerable:!0,configurable:!0}),s.prototype.addCircle=function(){this.drawingManagerOptions.drawingMode=google.maps.drawing.OverlayType.CIRCLE},s.prototype.addPolygon=function(){this.drawingManagerOptions.drawingMode=google.maps.drawing.OverlayType.POLYGON},s.prototype.addRectangle=function(){this.drawingManagerOptions.drawingMode=google.maps.drawing.OverlayType.RECTANGLE},s.prototype.addLine=function(){this.drawingManagerOptions.drawingMode=google.maps.drawing.OverlayType.POLYLINE},s.prototype.addMarker=function(){this.drawingManagerOptions.drawingMode=google.maps.drawing.OverlayType.MARKER},s.prototype.clearMap=function(){this.drawingManagerOptions.drawingMode=null,this.currentOverlay&&this.currentOverlay.map&&(this.currentOverlay.setMap(null),this.currentOverlay=null,this.onEditOverlay())},s);function s(t,e,n,o,i,a){var s=this;this.$element=t,this.$scope=e,this.$mdConstant=n,this.$document=o,this.$timeout=i,this.uiGmapGoogleMapApi=a,this.map={control:{},options:{disableDefaultUI:!0,mapTypeId:"satellite",panControl:!1,zoomControl:!1,mapTypeControl:!1,streetViewControl:!1}},this.drawingManagerControl={},this.drawingManagerOptions={},this.currentOverlay={},this._circleOptions={fillColor:"#F8E81C",fillOpacity:.2,strokeWeight:3,strokeColor:"#F8E81C",clickable:!1,editable:!this.disabled,zIndex:1},this._polygonOptions={fillColor:"#F8E81C",fillOpacity:.2,strokeWeight:3,strokeColor:"#F8E81C",clickable:!1,editable:!this.disabled,draggable:!this.disabled,zIndex:1},this._polylineOptions={strokeWeight:6,strokeColor:"#F8E81C",clickable:!1,editable:!this.disabled,zIndex:1},this._markerOptions={icon:{path:0,scale:4,strokeWeight:8,fillColor:"#F8E81C",strokeColor:"#F8E81C",strokeOpacity:.9,draggable:!this.disabled}},this._rectangleOptions={fillColor:"#F8E81C",fillOpacity:.2,strokeWeight:3,strokeColor:"#F8E81C",clickable:!1,editable:!this.disabled,draggable:!this.disabled,zIndex:1},t.addClass("pip-map-edit"),a.then(function(t){s.drawingManagerOptions={drawingControl:!1,drawingControlOptions:{position:google.maps.ControlPosition.TOP_CENTER,drawingModes:[google.maps.drawing.OverlayType.CIRCLE,google.maps.drawing.OverlayType.POLYGON,google.maps.drawing.OverlayType.POLYLINE]},circleOptions:s._circleOptions,polygonOptions:s._polygonOptions,polylineOptions:s._polylineOptions,markerOptions:s._markerOptions,rectangleOptions:s._rectangleOptions}}),e.$watch("$ctrl.map.control.getGMap",function(){s.currentOverlay&&s.currentOverlay.setMap&&_.isFunction(s.map.control.getGMap)&&(s.currentOverlay.setMap(s.map.control.getGMap()),s.fitBounds())}),e.$watch("$ctrl.mapOptions.embededMap",function(){_.assign(s.map,s.mapOptions)},!0),e.$watch("$ctrl.mapOptions.isEmbeded",function(){_.assign(s.map,s.mapOptions)}),e.$watch("$ctrl.drawingManagerControl.getDrawingManager",function(t){s.drawingManagerControl.getDrawingManager&&(google.maps.event.addListener(s.drawingManagerControl.getDrawingManager(),"overlaycomplete",function(t){s.drawingManagerControl.getDrawingManager().setDrawingMode(null),s.setOverlay(t.overlay,t.type,!1),s.onEditOverlay()}),google.maps.event.addListener(s.drawingManagerControl.getDrawingManager(),"drawingmode_changed",function(){null!==s.drawingManagerControl.getDrawingManager().getDrawingMode()&&s.currentOverlay&&s.currentOverlay.map&&s.currentOverlay.setMap(null)}),google.maps.event.addDomListener(document,"keyup",function(t){var e=t.keyCode?t.keyCode:t.which;27===e&&s.drawingManagerControl.getDrawingManager().setDrawingMode(null),46===e&&s.clearMap()}))})}function r(t){t.configure({libraries:"drawing"})}r.$inject=["uiGmapGoogleMapApiProvider"],angular.module("pipMapsEdit").component("pipMapEdit",{bindings:o,templateUrl:"edit/MapEdit.html",controller:a,controllerAs:"$ctrl"}).config(r)},{}],7:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),angular.module("pipMapsEdit",[]),t("./MapEdit")},{"./MapEdit":6}],8:[function(t,e,n){!function(){"use strict";angular.module("pipMapsElements").factory("MapElementsCtrlFct",function(){function t(t,e){t.get("mapEventHandlerMixinFct").mixTo(this,e.$applyAsync.bind(e)),this.control={},this.popUpOpened=null,this.pipMapHelperSrv=t.get("pipMapHelperSrv"),this.uiGmapIsReady=t.get("uiGmapIsReady"),this.$q=t.get("$q")}return t.prototype.$onInit=function(){var e=this;this.options=angular.merge({},this.defaultOptions,this.componentOptions),this.models=this.models||[],this.externalDblclick=this.options.events&&this.options.events.dblclick?this.options.events.dblclick:angular.noop,this.externalClick=this.options.events&&this.options.events.click?this.options.events.click:angular.noop,this.externalRightclick=this.options.events&&this.options.events.rightclick?this.options.events.rightclick:angular.noop,this.events=_.extend(this.options.events,{dblclick:this.onEventHandler.bind(this),mousedown:this.onEventHandler.bind(this),mouseup:this.onEventHandler.bind(this),rightclick:this.onEventHandler.bind(this),click:this.onEventHandler.bind(this),position_changed:function(t){e.updatePopupPosition(t)}})},t.prototype.$onDestroy=function(){this.closePopup()},t.prototype.defaultOptions={popup:!1,fitBounds:!1},t.prototype.init=function(t){this.mapCtrl=t,this.initPopup()},t.prototype.setNewOptions=function(t){this.popup&&this.popup.setNewOptions(t)},t.prototype.initPopup=function(){this.options.popup&&(this.options.popup=angular.merge({},this.options.popup,{onShow:this.onShowPopup.bind(this),onClose:this.onClosePopup.bind(this)}),this.pipMapHelperSrv.whenReady.then(function(){this.popup=this.mapCtrl.createElementPopup(this.options.popup)}.bind(this)))},t.prototype.onShowPopup=function(){this.popUpOpened=!0},t.prototype.onClosePopup=function(){this.popUpOpened=!1},t.prototype.getBoundsToFitAsync=function(){return this.options.fitBounds?this.uiGmapIsReady.promise().then(function(){return this.getBounds()}.bind(this)):this.$q.reject("Fit is switched off")},t.prototype.getBounds=function(){return this.pipMapHelperSrv.getBoundsFromCoordinates(this.getAllPositions())},t.prototype.getAllPositions=function(){return angular.isArray(this.models)?this.models.map(function(t){return this.getPosition(t)},this):[]},t.prototype.getPosition=function(t){return{latitude:t.latitude,longitude:t.longitude}},t.prototype.isModelEmpty=function(t){var e=this.getPosition(t);return!e.latitude||!e.longitude},t.prototype.onDblclick=function(t){this.externalDblclick(t)},t.prototype.onClick=function(t){this.externalClick(t),this.longClick?(this.correctCircleModel(t),this.togglePopup(t),this.longClick=!1):this.closePopup()},t.prototype.correctCircleModel=function(e){var n=this;if(e.gModel.radius&&e.gModel.center){var o={};_.each(this.models,function(t){t[n.options.center]&&t[n.options.radius]&&t[n.options.center].latitude.toFixed(5)==e.gModel.center.lat().toFixed(5)&&t[n.options.center].longitude.toFixed(5)==e.gModel.center.lng().toFixed(5)&&t[n.options.radius].toFixed(5)===e.gModel.radius.toFixed(5)&&(o=t)}),e.model=o}},t.prototype.onRightclick=function(t){this.externalRightclick(t),this.correctCircleModel(t),this.togglePopup(t)},t.prototype.onMousedown=function(t){this.start=(new Date).getTime()},t.prototype.onMouseup=function(t){this.end=(new Date).getTime(),this.longClick=300<this.end-this.start},t.prototype.togglePopup=function(t){this.popup&&this.popup.toggle(t)},t.prototype.closePopup=function(t){this.popup&&this.popup.close()},t.prototype.getModels=function(){return this.models},t.prototype.checkContainsModel=function(t){return-1<this.models.indexOf(t)},t.prototype.getPlural=function(t){return this.getPlurals().get(t)},t.prototype.getPlurals=function(){return this.control.getPlurals()},t.prototype.updatePopupPosition=function(t){this.popUpOpened===t.model.id&&this.popup.setPosition({latitude:t.position.lat(),longitude:t.position.lng()})},t.prototype.freezeMap=function(){return this.mapCtrl.freeze()},t.prototype.unfreezeMap=function(){return this.mapCtrl.unfreeze()},t.prototype.setCursor=function(t){return this.mapCtrl.setCursor(t)},t})}()},{}],9:[function(t,e,n){!function(){"use strict";function t(s){return{strict:"AE",scope:{},require:["^pipMap","pipMapElements"],link:function(t,e,n,o){var i=o[0],a=o[1];a.init(i),t.$watch("ctrl.models",function(t){t&&a.getBoundsToFitAsync().then(function(t){s(i.fitMapToBounds.bind(i,t),200)})}),t.$watch("ctrl.componentOptions.popup",function(t){a.setNewOptions(t)},!0)},bindToController:{componentOptions:"=pipOptions",models:"=pipModels"},controller:"MapElementsCtrl",controllerAs:"ctrl",templateUrl:"elements/map-elements.html"}}t.$inject=["$timeout"],angular.module("pipMapsElements").factory("pipMapElementsFct",t)}()},{}],10:[function(t,e,n){!function(){"use strict";angular.module("pipMapsElements").factory("mapElementsRequireFct",function(){return{elements:["?^pipMapMarkers","?^pipMapPolylines","?^pipMapPolygons","?^pipMapKml"],getType:function(t,e){try{return t.slice(e).map(function(t,e){return t&&this.elements[e]},this).filter(function(t){return t})[0].replace("?^pipMap","").toLowerCase()}catch(t){throw new Error("pip-map-editable-element can be used only with map elements directives")}},getController:function(t,e){return t.slice(e).filter(function(t){return t})[0]}}})}()},{}],11:[function(t,e,n){!function(){"use strict";function t(n){function t(t,e){n.call(this,t,e),this.$parse=t.get("$parse")}var e=n.prototype;return(t.prototype=Object.create(e)).defaultOptions=angular.merge({},e.defaultOptions,{stroke:"stroke",fill:"fill",radius:"radius",center:"center",fitBounds:!1}),t.prototype.$onInit=function(){e.$onInit.call(this),this.setPositionGetterSetter()},t.prototype.setPositionGetterSetter=function(){var t=this.options.path;this.getPosition=this.$parse(t),this.setPosition=this.getPosition.assign},t.prototype.setDefaultPositionsIfNeeded=function(t){var e=this.getPosition(t);angular.isArray(e)||this.setPosition(t,[])},t.prototype.getAllPositions=function(){var t=e.getAllPositions.call(this);return Array.prototype.concat.apply([],t)},t.prototype.setPosition=function(t,e){t[this.defaultOptions.center]=e},t.prototype.getPosition=function(t){return t[this.defaultOptions.center]},t.prototype.isModelEmpty=function(t){return!this.getPosition(t)},t}function e(t,e,n){var o=t(n,{$scope:e});return angular.extend(o,this),o.$onInit(),o}function n(t){return angular.extend({},t,{require:["^pipMap","pipMapCircles"],controller:"MapCirclesCtrl",templateUrl:"elements/circles/map-circles.html"})}t.$inject=["MapElementsCtrlFct"],e.$inject=["$controller","$scope","MapCirclesCtrlFct"],n.$inject=["pipMapElementsFct"],angular.module("pipMapsElements").factory("MapCirclesCtrlFct",t).controller("MapCirclesCtrl",e).directive("pipMapCircles",n)}()},{}],12:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),angular.module("pipMapsElements",[]),t("./MapElementControllerService"),t("./MapElementDirectiveService"),t("./MapElementRequireService"),t("./kml/MapKml"),t("./markers/MapMarkers"),t("./polygons/MapPolygons"),t("./polylines/MapPolylines"),t("./circles/MapCircles")},{"./MapElementControllerService":8,"./MapElementDirectiveService":9,"./MapElementRequireService":10,"./circles/MapCircles":11,"./kml/MapKml":13,"./markers/MapMarkers":14,"./polygons/MapPolygons":15,"./polylines/MapPolylines":16}],13:[function(t,e,n){!function(){"use strict";function t(n){function t(t,e){n.call(this,t,e),this.pipMapHelperSrv=t.get("pipMapHelperSrv"),this.existingModels=[]}var e=n.prototype;return(t.prototype=Object.create(e)).defaultOptions=angular.merge({},e.defaultOptions,{layer:{preserveViewport:!0,suppressInfoWindows:!0}}),t.prototype.getPopupParameters=function(){return this.popup.model?{model:this.popup.model,position:this.popup.position,meta:this.popup.model.instance.getMetadata()}:{}},t.prototype.update=function(){this.pipMapHelperSrv.whenReady.then(function(){this.removeOldModels(),this.addNewModels()}.bind(this))},t.prototype.removeOldModels=function(){this.getOldModels().forEach(function(t){t.instance.setMap(null),this.deRegisterModel(t)},this)},t.prototype.getOldModels=function(){var e=this.models.map(function(t){return t.url});return this.existingModels.filter(function(t){return-1===e.indexOf(t.url)})},t.prototype.addNewModels=function(){this.getNewModels().forEach(function(t){var e=angular.copy(t);this.addModel(e),this.registerModel(e),this.addEvents(e)},this)},t.prototype.getNewModels=function(){var e=this.existingModels.map(function(t){return t.url});return this.models.filter(function(t){return-1===e.indexOf(t.url)})},t.prototype.addModel=function(t){var e=this.mapCtrl.getMapInstance(),n=angular.merge({map:e,url:t.url},this.options.layer);t.instance=this.pipMapHelperSrv.createKML(n)},t.prototype.addEvents=function(t){var e=this.onEvent.bind(this,t,"click");t.instance.addListener("click",e)},t.prototype.onEvent=function(t,e){var n=this.copyArguments(arguments,2);this.onEventHandler(t.instance,e,t,n)},t.prototype.copyArguments=function(t,e){for(var n=[],o=0;o<t.length-e;++o)n[o]=t[o+e];return n},t.prototype.getPopupMetaData=function(){return this.popup.model&&this.popup.model.instance.getMetadata()},t.prototype.registerModel=function(t){this.existingModels.push(t)},t.prototype.deRegisterModel=function(t){var e=this.existingModels.indexOf(t);this.existingModels.splice(e,1)},t}function e(t,e,n){var o=t(n,{$scope:e});return angular.extend(o,this),o.$onInit(),o}function n(t){var e=angular.extend({},t,{require:["^pipMap","pipMapKml"],controller:"MapKmlCtrl",templateUrl:"elements/kml/map-kml.html"}),s=e.link;return e.link=function(t,e,n,o){s.apply(this,arguments);var i=o[0],a=o[1];a.mapCtrl=i,t.$watchCollection("ctrl.models",function(t){t&&a.update()})},e}n.$inject=["pipMapElementsFct"],t.$inject=["MapElementsCtrlFct"],e.$inject=["$controller","$scope","MapKmlCtrlFct"],angular.module("pipMapsElements").directive("pipMapKml",n).factory("MapKmlCtrlFct",t).controller("MapKmlCtrl",e)}()},{}],14:[function(t,e,n){!function(){"use strict";function t(n){function t(t,e){n.call(this,t,e),this.$parse=t.get("$parse"),this.pipMapHelperSrv=t.get("pipMapHelperSrv")}var e=n.prototype;return(t.prototype=Object.create(e)).defaultOptions=angular.merge({},e.defaultOptions,{model:{coords:"self",icon:"icon"},connect:!1}),t.prototype.$onInit=function(){e.$onInit.call(this),this.setPositionGetterSetter(),this.initConnect()},t.prototype.initConnect=function(){if(this.options.connect){var t=this.options.connect;this.connect=angular.merge({show:!0},t)}},t.prototype.setPositionGetterSetter=function(){var t=this.options.model.coords;"self"!==t&&(this.getPosition=this.$parse(t),this.setPosition=this.getPosition.assign)},t.prototype.setPosition=function(t,e){angular.extend(t,e)},t.prototype.onShowPopup=function(t){this.popUpOpened=t.id,this.options.popup.options.setPosition},t.prototype.onClosePopup=function(){this.popUpOpened=null},t.prototype.setIconActive=function(t){t&&t.icon&&(this.popupModel=t,this.pipMapHelperSrv.setIcon(this.popupModel.icon,!0))},t.prototype.resetIconActive=function(){this.popupModel&&this.popupModel.icon&&(this.pipMapHelperSrv.setIcon(this.popupModel.icon,!1),this.popupModel=null)},t}function e(t,e,n){var o=t(n,{$scope:e});return angular.extend(o,this),o.$onInit(),o}function n(t){return angular.extend({},t,{require:["^pipMap","pipMapMarkers"],controller:"MapMarkersCtrl",templateUrl:"elements/markers/map-markers.html"})}t.$inject=["MapElementsCtrlFct"],e.$inject=["$controller","$scope","MapMarkersCtrlFct"],n.$inject=["pipMapElementsFct"],angular.module("pipMapsElements").factory("MapMarkersCtrlFct",t).controller("MapMarkersCtrl",e).directive("pipMapMarkers",n)}()},{}],15:[function(t,e,n){!function(){"use strict";function t(n){function t(t,e){n.call(this,t,e),this.$parse=t.get("$parse")}var e=n.prototype;return(t.prototype=Object.create(e)).defaultOptions=angular.merge({},e.defaultOptions,{path:"path",stroke:{color:"#ff6262",weight:5},fitBounds:!1}),t.prototype.$onInit=function(){e.$onInit.call(this),this.setPositionGetterSetter()},t.prototype.setPositionGetterSetter=function(){var t=this.options.path;this.getPosition=this.$parse(t),this.setPosition=this.getPosition.assign},t.prototype.setDefaultPositionsIfNeeded=function(t){var e=this.getPosition(t);angular.isArray(e)||this.setPosition(t,[])},t.prototype.getAllPositions=function(){var t=e.getAllPositions.call(this);return Array.prototype.concat.apply([],t)},t.prototype.setPosition=function(t,e){t[this.defaultOptions.path]=e},t.prototype.getPosition=function(t){return t[this.defaultOptions.path]},t.prototype.isModelEmpty=function(t){var e=this.getPosition(t);return!(e&&e.length&&e[0].latitude&&e[0].longitude)},t}function e(t,e,n){var o=t(n,{$scope:e});return angular.extend(o,this),o.$onInit(),o}function n(t){return angular.extend({},t,{require:["^pipMap","pipMapPolygons"],controller:"MapPolygonsCtrl",templateUrl:"elements/polygons/map-polygons.html"})}t.$inject=["MapElementsCtrlFct"],e.$inject=["$controller","$scope","MapPolygonsCtrlFct"],n.$inject=["pipMapElementsFct"],angular.module("pipMapsElements").factory("MapPolygonsCtrlFct",t).controller("MapPolygonsCtrl",e).directive("pipMapPolygons",n)}()},{}],16:[function(t,e,n){!function(){"use strict";function t(n){function t(t,e){n.call(this,t,e)}var e=n.prototype;return(t.prototype=Object.create(e)).defaultOptions=angular.merge({},e.defaultOptions,{}),t}function e(t,e,n){var o=t(n,{$scope:e});return angular.extend(o,this),o.$onInit(),o}function n(t){return angular.extend({},t,{require:["^pipMap","pipMapPolylines"],controller:"MapPolylinesCtrl",templateUrl:"elements/polylines/map-polylines.html"})}t.$inject=["MapPolygonsCtrlFct"],e.$inject=["$controller","$scope","MapPolylinesCtrlFct"],n.$inject=["pipMapElementsFct"],angular.module("pipMapsElements").factory("MapPolylinesCtrlFct",t).controller("MapPolylinesCtrl",e).directive("pipMapPolylines",n)}()},{}],17:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),t("./popup"),t("./elements"),t("./edit"),angular.module("pipMaps",["uiGmapgoogle-maps","pipMaps.Templates","pipMapsPopup","pipMapsElements","pipMapsEdit"]),t("./config"),t("./GoogleMapsRemoveAfterService"),t("./HelpService"),t("./Map"),t("./MapEventHandlerService")},{"./GoogleMapsRemoveAfterService":1,"./HelpService":2,"./Map":3,"./MapEventHandlerService":4,"./config":5,"./edit":7,"./elements":12,"./popup":22}],18:[function(t,e,n){!function(){"use strict";function t(t){var n=t.get("pipMapHelperSrv"),e=t.get("$rootScope");function o(t){new Error;var e=n.createSize(t.offset.width,t.offset.height);this.options=angular.merge({boxClass:"pip-map-info-window "+t.className,closeBoxURL:"",pixelOffset:e},t.options),this.templateUrl=t.templateUrl,this.onShow=t.onShow,this.onClose=t.onClose,this.initBreakpoints(t.offset.breakpoints)}return o.prototype.initBreakpoints=function(t){t=t||[],this.breakpoints=t.map(function(t){return{name:t.name,offset:n.createSize(t.width,t.height)}},this),this.defaultOffset=this.options.pixelOffset},o.prototype.setNewOptions=function(t){var e=n.createSize(t.offset.width,t.offset.height);this.options=angular.merge({boxClass:"pip-map-info-window "+t.className,closeBoxURL:"",pixelOffset:e},t.options),this.initBreakpoints(t.offset.breakpoints),this.fitOffset()},o.prototype.close=function(){this.onClose()},o.prototype.show=function(t){this.onShow(t),this.fitOffset()},o.prototype.setPosition=function(){this.fitOffset()},o.prototype.fitOffset=function(){this.breakpoints.some(function(t){if(e.utils.hasBreakpoint(t.name))return this.options.pixelOffset=t.offset,!0},this)||(this.options.pixelOffset=this.defaultOffset)},{create:function(t){return new o(t)}}}t.$inject=["$injector"],angular.module("pipMapsPopup").factory("MapElementPopupFct",t)}()},{}],19:[function(t,e,n){!function(){"use strict";angular.module("pipMapsPopup").directive("pipMapPopup",function(){return{strict:"A",scope:{popup:"=pipMapPopup"},templateUrl:"popup/map-popup.html"}})}()},{}],20:[function(t,e,n){!function(){"use strict";angular.module("pipMapsPopup").directive("pipMapPopupContent",function(){return{strict:"AE",transclude:!0,templateUrl:"popup/map-popup-content.html"}})}()},{}],21:[function(t,e,n){!function(){"use strict";function t(t){var o=t.get("MapElementPopupFct"),e=t.get("$rootScope"),n=t.get("$timeout");function i(){this.elements=[]}return i.prototype.add=function(t){var e=this,n=o.create(t);return this.elements.push(n),{toggle:this.toggle.bind(this,n),close:this.close.bind(this,n),setPosition:function(t){!1!==e.element.options.updatePosition&&(e.position=t)},setNewOptions:function(t){n.setNewOptions(t)}}},i.prototype.toggle=function(t,e){if(this.isNewModel(e))return this.close(),this.element=t,n(function(){this.show(t)}.bind(this),10),void this.setPosition(e);this.close()},i.prototype.isNewModel=function(t){return this.model!==t.model},i.prototype.show=function(t){this.model&&this.position&&(this.isEnabled=!0,this.setBreakpointHandler(t))},i.prototype.setPosition=function(t){this.position=this.getPosition(t),this.model=t.model,this.element.show(this.model)},i.prototype.setBreakpointHandler=function(t){this.removeBreakpointHandler=e.$on("pipMainLayoutResized",t.setPosition.bind(t))},i.prototype.resetBreakpointHandler=function(){this.removeBreakpointHandler&&this.removeBreakpointHandler()},i.prototype.close=function(){this.element&&(this.element.close(),this.resetBreakpointHandler(),this.model=null,this.isEnabled=!1,this.position=null,this.element=null)},i.prototype.getPosition=function(t){return t.position},{create:function(){return new i}}}t.$inject=["$injector"],angular.module("pipMapsPopup").factory("MapPopupFct",t)}()},{}],22:[function(t,e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),angular.module("pipMapsPopup",[]),t("./MapElementPopupService"),t("./MapPopup"),t("./MapPopupContent"),t("./MapPopupService")},{"./MapElementPopupService":18,"./MapPopup":19,"./MapPopupContent":20,"./MapPopupService":21}],23:[function(t,e,n){!function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("map.html",'<div class="pip-map-side-panel flex-fixed flex-order-1" ng-if="ctrl.sidePanel.show"><ng-include src="ctrl.sidePanel.template"></ng-include></div><ui-gmap-google-map class="flex pip-map-provider-wrapper" control="ctrl.componentOptions.control" center="ctrl.map.center" zoom="ctrl.map.zoom" options="ctrl.map.options" bounds="ctrl.map.bounds" events="ctrl.map.events"><div pip-map-popup="ctrl.popup" ng-if="ctrl.popup"></div><ng-transclude></ng-transclude></ui-gmap-google-map>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("edit/MapEdit.html",'<pip-map pip-options="$ctrl.map"><ui-gmap-drawing-manager options="$ctrl.drawingManagerOptions" control="$ctrl.drawingManagerControl"></ui-gmap-drawing-manager><pip-map-polygons pip-models="$ctrl.disabledPolygons" pip-options="$ctrl.disabledPolygonsOptions"></pip-map-polygons><pip-map-polylines pip-models="$ctrl.disabledPolylines" pip-options="$ctrl.disabledPolylinesOptions"></pip-map-polylines><pip-map-circles pip-models="$ctrl.disabledCircles" pip-options="$ctrl.disabledCirclesOptions"></pip-map-circles></pip-map><div class="action-panel w-stretch layout-row layout-align-center-center" ng-if="$ctrl.showPanel"><div class="action-buttons color-primary-bg flex-fixed"><md-button ng-click="$ctrl.clearMap()" ng-if="$ctrl.showAction(\'clear\')">{{ \'CLEAR_MAP\' | translate }}</md-button><md-button ng-click="$ctrl.addCircle()" ng-if="$ctrl.showAction(\'circle\')">{{ \'ADD_CIRCLE\' | translate }}</md-button><md-button ng-click="$ctrl.addPolygon()" ng-if="$ctrl.showAction(\'polygon\')">{{ \'ADD_POLYGON\' | translate }}</md-button><md-button ng-click="$ctrl.addLine()" ng-if="$ctrl.showAction(\'line\')">{{ \'ADD_LINE\' | translate }}</md-button></div></div>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("edit_old/map-edit-tool.html",'<div layout="column" class="pip-map-edit-tool theme-text-primary" ng-init="currentElement = editCtrl.currentElement; tool = currentElement.tool; model = tool.currentModel"><header hide-xs="" class="pip-map-edit-header" layout="column" layout-align="space-between"><h2 class="md-title">{{:: currentElement.getEditTitle() }}</h2><div class="pip-map-edit-actions" layout="row"><span class="pip-map-edit-actions-block-main"><md-button ng-click="tool.undo()" ng-disabled="tool.isUndoDisabled()"><md-icon md-svg-icon="map:undo" aria-label="Undo"></md-icon></md-button></span><md-divider></md-divider><span class="pip-map-edit-actions-block-tool"><md-button ng-repeat="action in tool.actions" ng-disabled="tool.isActionDisabled(action)" ng-click="tool.setAction(action)"><md-icon md-svg-icon="{{:: action.definition.icon }}" aria-label="{{:: action.definition.name }}" ng-class="{ active: tool.isActionActive(action) }"></md-icon></md-button></span></div></header><header hide-gt-xs="" class="pip-map-edit-header" layout="column" layout-align="space-between"><form name="editCtrl.modelForm" ng-include="editCtrl.currentElement.tool.template"></form></header><md-divider></md-divider><section flex="auto" class="pip-map-edit-content"><form hide-xs="" name="editCtrl.modelForm" ng-include="editCtrl.currentElement.tool.template"></form></section><md-divider></md-divider><footer hide-xs="" class="pip-map-edit-footer" layout="row" layout-align="end center"><div flex=""><md-button ng-click="editCtrl.remove()">{{:: \'DELETE\' | translate }} {{:: currentElement.name }}</md-button></div><md-button ng-click="editCtrl.cancel()">{{:: \'CANCEL\' | translate }}</md-button><md-button ng-click="editCtrl.save()" ng-disabled="editCtrl.modelForm.$invalid">{{:: tool.titleSave | translate }}</md-button></footer><footer hide-gt-xs="" class="pip-map-edit-footer" layout="row" layout-align="start center"><div layout="row" layout-align="space-around"><md-button ng-click="tool.undo()" ng-disabled="tool.isUndoDisabled()"><md-icon md-svg-icon="map:undo" aria-label="Remove"></md-icon></md-button></div><md-divider></md-divider><md-menu flex="" layout="column"><md-button class="pip-map-edit-actions-trigger" ng-click="$mdOpenMenu($event)"><md-icon class="active" md-svg-icon="{{ tool.currentAction.definition.icon }}" aria-label="Trigger menu" md-menu-origin=""></md-icon><md-icon md-svg-icon="map:tools" aria-label="Triangle down"></md-icon></md-button><md-menu-content width="4"><md-menu-item ng-repeat="action in tool.actions"><md-button ng-click="tool.setAction(action)" ng-disabled="tool.isActionDisabled(action)"><md-icon md-svg-icon="{{:: action.definition.icon }}" aria-label="{{:: action.definition.name }}" ng-class="{ active: tool.isActionActive(action) }" md-menu-align-target=""></md-icon>{{:: action.definition.name }}</md-button></md-menu-item></md-menu-content></md-menu><md-divider></md-divider><div layout="row" layout-align="space-around"><md-button ng-click="editCtrl.cancel()"><md-icon md-svg-icon="map:cross" aria-label="Close"></md-icon></md-button><md-button ng-click="editCtrl.save()" ng-disabled="editCtrl.modelForm.$invalid"><md-icon md-svg-icon="map:check" aria-label="Sumbit"></md-icon></md-button></div></footer></div>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("edit_old/map-edit-tools-list.html",'<md-fab-speed-dial class="pip-floating-button map-add-button md-scale" md-direction="up" md-open="fab.isOpen"><md-fab-trigger><md-button class="md-fab" ng-class="{\'md-accent md-raised\': !fab.isOpen, \'md-warn\': fab.isOpen}"><md-icon md-svg-icon="map:plus" aria-label="Open" class="md-headline centered-add-icon" ng-if="!fab.isOpen"></md-icon><md-icon md-svg-icon="map:cross" aria-label="Close" class="md-headline centered-add-icon" ng-if="fab.isOpen"></md-icon></md-button></md-fab-trigger><md-fab-actions class="pip-map-edit-tools-list"><div ng-repeat="element in ::editCtrl.elements"><span class="pip-map-edit-tooltip">{{:: element.name }}</span><md-button class="md-fab md-raised md-mini" ng-click="editCtrl.createElement(element)"><md-icon md-svg-icon="{{:: element.icon }}" aria-label="{{:: element.icon }}"></md-icon></md-button></div></md-fab-actions></md-fab-speed-dial>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("edit_old/map-edit.html",'<script type="text/ng-template" id="map-icons.svg"><svg xmlns="http://www.w3.org/2000/svg"> <defs> <g id="trash" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M128 107c0-24 19-43 43-43l170 0c24 0 43 19 43 43l0 256-256 0z m277 320l-74 0-22 21-106 0-22-21-74 0 0-43 298 0z"/></g> <g id="plus" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M405 235l-128 0 0-128-42 0 0 128-128 0 0 42 128 0 0 128 42 0 0-128 128 0z"/></g> <g id="cross" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M405 375l-30 30-119-119-119 119-30-30 119-119-119-119 30-30 119 119 119-119 30 30-119 119z"/></g> <g id="undo" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M213 320l0 85-149-149 149-149 0 87c107 0 182-34 235-109-21 107-85 214-235 235z"/></g> <g id="check" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M192 167l-89 89-30-30 119-119 256 256-30 30z"/></g> <g id="tools" transform="translate(512,0) scale(-1,1) rotate(180,256,256)"><path d="M149 299l107-107 107 107z"/></g> <g id="add-point" transform="translate(0,0) scale(25)"><path class="cls-1" d="M8.46,9l2.81-.17a0.31,0.31,0,0,0,.2-0.53L3.4,0.09A0.31,0.31,0,0,0,2.87.3V11.81a0.31,0.31,0,0,0,.51.23L5.51,10.2l1.9,4.64a0.31,0.31,0,0,0,.4.17l2.37-1a0.31,0.31,0,0,0,.17-0.4Z"/><polygon class="cls-1" points="14.96 15.62 14.96 12.72 13.49 12.72 13.49 15.62 10.59 15.62 10.59 17.1 13.49 17.1 13.49 20 14.96 20 14.96 17.1 17.87 17.1 17.87 15.62 14.96 15.62"/></g> <g id="remove-point" transform="translate(0,0) scale(25)"><path class="cls-1" d="M8.46,9l2.81-.17a0.31,0.31,0,0,0,.2-0.53L3.4,0.09a0.31,0.31,0,0,0-.53.22V11.82a0.31,0.31,0,0,0,.51.23l2.12-1.84,1.9,4.64a0.31,0.31,0,0,0,.4.17l2.37-1a0.31,0.31,0,0,0,.17-0.4Z"/><rect class="cls-1" x="10.58" y="15.63" width="7.28" height="1.48"/></g> <g id="pan" transform="translate(0,0) scale(25)"><path d="M15.28,6.56V9H11V4.74h2.41a0.31,0.31,0,0,0,.24-0.51L10.24,0.13a0.31,0.31,0,0,0-.47,0L6.31,4.23a0.31,0.31,0,0,0,.24.51H9V9H4.72V6.56a0.31,0.31,0,0,0-.51-0.24L0.11,9.78a0.31,0.31,0,0,0,0,.47l4.11,3.46a0.31,0.31,0,0,0,.51-0.24V11.07H9v4.23H6.54a0.31,0.31,0,0,0-.24.51l3.46,4.11a0.31,0.31,0,0,0,.47,0l3.46-4.11a0.31,0.31,0,0,0-.24-0.51H11V11.07h4.23v2.41a0.31,0.31,0,0,0,.51.24l4.11-3.46a0.31,0.31,0,0,0,0-.47L15.78,6.32A0.31,0.31,0,0,0,15.28,6.56Z"/></g> <g id="pen" transform="translate(0,0) scale(25)"><path d="M18.92,1.08a3.27,3.27,0,0,0-2.33-1,3.9,3.9,0,0,0-2.71,1.25,3.47,3.47,0,0,0-.44.54L5.66,10.66l-0.43-.43A0.36,0.36,0,0,0,5,10.12a0.39,0.39,0,0,0-.27.11L3.62,11.31a0.38,0.38,0,0,0,0,.53l0.45,0.45a8,8,0,0,1-2.46,1.09,0.54,0.54,0,0,0-.35.38v0S1,18.13,0,19.43a0.36,0.36,0,0,0,0,.36h0l0.13,0.14h0A0.57,0.57,0,0,0,.43,20a0.27,0.27,0,0,0,.13,0c1.42-.82,5.62-1.22,5.66-1.22h0a0.55,0.55,0,0,0,.38-0.35,9.52,9.52,0,0,1,1.1-2.45l0.44,0.44a0.36,0.36,0,0,0,.26.11,0.38,0.38,0,0,0,.27-0.11l1.07-1.07A0.39,0.39,0,0,0,9.87,15a0.36,0.36,0,0,0-.11-0.27l-0.43-.43,8.83-7.79a3.46,3.46,0,0,0,.54-0.44,4,4,0,0,0,1.24-2.47A3.22,3.22,0,0,0,18.92,1.08ZM4.66,17a1.15,1.15,0,1,1,0-1.63A1.15,1.15,0,0,1,4.66,17Z"/></g> <g id="select" transform="translate(0,0) scale(25)"><path d="M15.66,11.25L4.71,0.09a0.31,0.31,0,0,0-.53.22V15.94a0.31,0.31,0,0,0,.51.23l3-2.57,2.54,6.21a0.31,0.31,0,0,0,.4.17l3.31-1.35a0.31,0.31,0,0,0,.17-0.4L11.54,12l3.92-.24A0.31,0.31,0,0,0,15.66,11.25Z"/></g> <g id="hand" transform="translate(0,0) scale(25)"><path d="M16.9,3.52a0.92,0.92,0,0,0-.92.92v4a0.44,0.44,0,0,1-.88,0V1.76a1.1,1.1,0,0,0-2.21,0V8.44h0a0.42,0.42,0,0,1-.83,0V1.2a1.2,1.2,0,0,0-2.39,0s0,7.19,0,7.27a0.4,0.4,0,0,1-.8,0V2.24a1.2,1.2,0,1,0-2.39,0c0,8.67,0,7.67,0,8.39a2,2,0,0,1-.13,1c-0.11.08-.25,0-0.43-0.26C5.51,10.79,4.13,9,2.79,9.63a1.33,1.33,0,0,0-.33,1.93s3,4.34,4,5.84c0.59,0.88.75,1.16,1,1.45C8.15,20,8.58,20,9.84,20H15c2.79,0,2.79-3.31,2.79-4.73V4.94C17.82,3.93,17.41,3.52,16.9,3.52Z"/></g> <g id="draw" transform="translate(0,0) scale(25)"><path d="M1.94,4.37L0,2.49A2.08,2.08,0,0,1,.19,2.27L0.41,2l0.27-.26A2.84,2.84,0,0,0,1,1.48l0.39-.34A5.66,5.66,0,0,1,2,.68,6.24,6.24,0,0,1,2.92.27,3,3,0,0,1,4,.09a2.72,2.72,0,0,1,.81.15A2.6,2.6,0,0,1,5.7.79a2.85,2.85,0,0,1,.74,1,3.49,3.49,0,0,1,.3,1.54,4.64,4.64,0,0,1-.1,1,4.76,4.76,0,0,1-.28.88Q6.14,5.59,5.88,6t-0.59.88l-0.46.75q-0.28.46-.59,1L3.68,9.75a9.54,9.54,0,0,0-.43,1,4.27,4.27,0,0,0-.15.85,2,2,0,0,0,.05.67,1,1,0,0,0,.19.45,0.42,0.42,0,0,0,.32.17A0.72,0.72,0,0,0,4,12.79a1.59,1.59,0,0,0,.34-0.26,2.42,2.42,0,0,0,.3-0.3L4.9,12l0.4-.48L6,10.65l0.77-.93q0.39-.46.62-0.77T8.26,8A9.38,9.38,0,0,1,9.5,7a8.58,8.58,0,0,1,1.57-.84,4.66,4.66,0,0,1,1.78-.35,4,4,0,0,1,2,.46,4.25,4.25,0,0,1,1.33,1.16A4.89,4.89,0,0,1,17,9a8.61,8.61,0,0,1,.32,1.48H20V13.2H17.29a9.87,9.87,0,0,1-.74,3.25,7.19,7.19,0,0,1-1.33,2.06,4.55,4.55,0,0,1-1.6,1.08,4.31,4.31,0,0,1-1.5.31,3.5,3.5,0,0,1-1.37-.27,3.43,3.43,0,0,1-1.11-.74,3.47,3.47,0,0,1-.77-1.08,3.12,3.12,0,0,1-.28-1.32,4.63,4.63,0,0,1,.35-1.61A6.43,6.43,0,0,1,10,13.1a7.75,7.75,0,0,1,1.85-1.55,7.63,7.63,0,0,1,2.67-1q-0.05-.31-0.1-0.66a1.6,1.6,0,0,0-.23-0.63,1.25,1.25,0,0,0-.55-0.49,2.45,2.45,0,0,0-1-.18A2.09,2.09,0,0,0,11.5,9a8.11,8.11,0,0,0-1.17.9q-0.57.57-1.15,1.24T8.1,12.4L7.23,13.46a10.26,10.26,0,0,1-.83.88,6.4,6.4,0,0,1-.81.7,2.76,2.76,0,0,1-.86.41,3.09,3.09,0,0,1-.75.12,4.28,4.28,0,0,1-.75,0,4,4,0,0,1-.74-0.22,3,3,0,0,1-.66-0.37A3.32,3.32,0,0,1,.72,13.56a5.4,5.4,0,0,1-.28-0.92,4.69,4.69,0,0,1-.1-1A5.76,5.76,0,0,1,.8,9.5a21.73,21.73,0,0,1,1-2.15q0.57-1,1.07-1.74l0.61-.89,0.27-.46A3,3,0,0,0,4,3.75,0.91,0.91,0,0,0,4.05,3.3,0.38,0.38,0,0,0,3.82,3a0.42,0.42,0,0,0-.34.05A2.67,2.67,0,0,0,3,3.34L2.5,3.81Q2.22,4.06,1.94,4.37ZM12.15,17.23A1.36,1.36,0,0,0,12.81,17a2.31,2.31,0,0,0,.68-0.63,4.77,4.77,0,0,0,.62-1.17,7.65,7.65,0,0,0,.41-1.85A4.78,4.78,0,0,0,13,14a4.59,4.59,0,0,0-1,.85,3.77,3.77,0,0,0-.53.88,1.89,1.89,0,0,0-.17.67,0.74,0.74,0,0,0,.08.34,0.76,0.76,0,0,0,.21.26,0.66,0.66,0,0,0,.25.15A0.79,0.79,0,0,0,12.15,17.23Z"/></g> <g id="point" transform="translate(0,0) scale(25)"><path d="M10,0a6.88,6.88,0,0,1,4.94,2.06A6.88,6.88,0,0,1,17,7q0,3.93-7,13Q3,10.94,3,7A6.88,6.88,0,0,1,5.06,2.06,6.88,6.88,0,0,1,10,0Zm0,9.51a2.41,2.41,0,0,0,1-.2,2.34,2.34,0,0,0,.78-0.55A2.34,2.34,0,0,0,12.31,8a2.47,2.47,0,0,0,0-1.94,2.34,2.34,0,0,0-.55-0.78A2.34,2.34,0,0,0,11,4.7,2.47,2.47,0,0,0,9,4.7a2.34,2.34,0,0,0-.78.55A2.34,2.34,0,0,0,7.69,6,2.47,2.47,0,0,0,7.69,8a2.34,2.34,0,0,0,.55.78A2.34,2.34,0,0,0,9,9.31,2.41,2.41,0,0,0,10,9.51Z"/></g> </defs></svg><\/script>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("popup/map-popup-content.html",'<div class="map-popup-content"><md-content md-theme="{{:: $root.$theme || \'blue\' }}" flex=""><md-button class="md-icon-button pip-map-info-window-close-button" ng-click="closeClick(); $event.stopPropagation()" tabindex="-1" aria-label="close"><md-icon class="theme-icon-active" md-svg-icon="icons:cross"></md-icon></md-button><ng-transclude></ng-transclude></md-content><div class="pip-map-info-window-arrow-wrapper"><div><div></div></div><div><div></div></div></div></div>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("popup/map-popup.html",'<ui-gmap-window ng-if="popup.isEnabled" show="popup.isEnabled" coords="popup.position" templateurl=":: popup.element.templateUrl" templateparameter=":: popup" options=":: popup.element.options" closeclick="popup.close()"></ui-gmap-window>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("elements/circles/map-circles.html",'<ui-gmap-circle ng-repeat="c in ctrl.models" center="c[ctrl.options.center]" stroke="c[ctrl.options.stroke]" fill="c[ctrl.options.fill]" radius="c[ctrl.options.radius]" geodesic="c.geodesic" events="ctrl.events" visible="true"></ui-gmap-circle>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("elements/kml/map-kml.html","")}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("elements/markers/map-markers.html",'<ui-gmap-markers models="ctrl.models" coords=":: ctrl.options.model.coords" icon=":: ctrl.options.model.icon" options="\'options\'" control=":: ctrl.control" events=":: ctrl.events" fit=":: ctrl.options.fitBounds"></ui-gmap-markers><ui-gmap-polylines ng-if=":: ctrl.connect" models="ctrl.models" path=":: ctrl.connect.property" stroke=":: ctrl.connect.stroke" icons=":: ctrl.connect.icons"></ui-gmap-polylines>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("elements/polygons/map-polygons.html",'<ui-gmap-polygons models="ctrl.models" path="ctrl.options.path" stroke="ctrl.options.stroke" fill="ctrl.options.fill" control="ctrl.control" events="ctrl.events" visible="\'visible\'" geodesic="\'geodesic\'" editable="\'editable\'" draggable="\'draggable\'" fit=":: ctrl.options.fitBounds"></ui-gmap-polygons>')}])}(),function(e){try{e=angular.module("pipMaps.Templates")}catch(t){e=angular.module("pipMaps.Templates",[])}e.run(["$templateCache",function(t){t.put("elements/polylines/map-polylines.html",'<ui-gmap-polylines models="ctrl.models" path="ctrl.options.path" stroke="ctrl.options.stroke" icons="ctrl.options.icons" control="ctrl.control" events="ctrl.events" visible="\'visible\'" geodesic="\'geodesic\'" editable="\'editable\'" draggable="\'draggable\'" static="ctrl.options.static" fit="ctrl.options.fitBounds"></ui-gmap-polylines>')}])}()},{}]},{},[17,23])(23)});
//# sourceMappingURL=pip-suite-map.min.js.map
